{"version":3,"sources":["jquery.rating.pack.js"],"names":["window","jQuery","$","browser","msie","document","execCommand","e","fn","rating","options","this","length","arguments","args","each","apply","makeArray","slice","extend","calls","not","addClass","control","input","eid","name","replace","context","form","body","raters","data","call","count","rater","metadata","meta","stars","inputs","serial","before","attr","readOnly","append","cancel","cancelValue","mouseover","mouseout","removeClass","click","star","title","value","id","className","half","split","stw","width","starWidth","spi","spw","Math","floor","find","css","margin-left","checked","current","hide","change","focus","tagName","val","blur","fill","prevAll","andSelf","filter","drain","children","draw","removeAttr","required","siblings","select","wantCallBack","undefined","is","callback","toggle","disable","enable"],"mappings":"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","file":"jquery.rating.pack.js","sourcesContent":["/*\n ### jQuery Star Rating Plugin v3.13 - 2009-03-26 ###\n * Home: http://www.fyneworks.com/jquery/star-rating/\n * Code: http://code.google.com/p/jquery-star-rating-plugin/\n *\n  * Dual licensed under the MIT and GPL licenses:\n *   http://www.opensource.org/licenses/mit-license.php\n *   http://www.gnu.org/licenses/gpl.html\n ###\n*/\n\n/*# AVOID COLLISIONS #*/\n;\nif (window.jQuery)(function($) {\n  /*# AVOID COLLISIONS #*/\n\n  // IE6 Background Image Fix\n  if ($.browser.msie) try {\n    document.execCommand(\"BackgroundImageCache\", false, true)\n  } catch (e) {};\n  // Thanks to http://www.visualjquery.com/rating/rating_redux.html\n\n  // plugin initialization\n  $.fn.rating = function(options) {\n    if (this.length == 0) return this; // quick fail\n\n    // Handle API methods\n    if (typeof arguments[0] == 'string') {\n      // Perform API methods on individual elements\n      if (this.length > 1) {\n        var args = arguments;\n        return this.each(function() {\n          $.fn.rating.apply($(this), args);\n        });\n      };\n      // Invoke API method handler\n      $.fn.rating[arguments[0]].apply(this, $.makeArray(arguments).slice(1) || []);\n      // Quick exit...\n      return this;\n    };\n\n    // Initialize options for this call\n    var options = $.extend({} /* new object */ ,\n      $.fn.rating.options /* default options */ ,\n      options || {} /* just-in-time options */\n    );\n\n    // Allow multiple controls with the same name by making each call unique\n    $.fn.rating.calls++;\n\n    // loop through each matched element\n    this\n      .not('.star-rating-applied')\n      .addClass('star-rating-applied')\n      .each(function() {\n\n        // Load control parameters / find context / etc\n        var control, input = $(this);\n        var eid = (this.name || 'unnamed-rating').replace(/\\[|\\]/g, '_').replace(/^\\_+|\\_+$/g, '');\n        var context = $(this.form || document.body);\n\n        // FIX: http://code.google.com/p/jquery-star-rating-plugin/issues/detail?id=23\n        var raters = context.data('rating');\n        if (!raters || raters.call != $.fn.rating.calls) raters = {\n          count: 0,\n          call: $.fn.rating.calls\n        };\n        var rater = raters[eid];\n\n        // if rater is available, verify that the control still exists\n        if (rater) control = rater.data('rating');\n\n        if (rater && control) //{// save a byte!\n        // add star to control if rater is available and the same control still exists\n          control.count++;\n\n        //}// save a byte!\n        else {\n          // create new control if first star or control element was removed/replaced\n\n          // Initialize options for this raters\n          control = $.extend({} /* new object */ ,\n            options || {} /* current call options */ , ($.metadata ? input.metadata() : ($.meta ? input.data() : null)) || {}, /* metadata options */ {\n              count: 0,\n              stars: [],\n              inputs: []\n            }\n          );\n\n          // increment number of rating controls\n          control.serial = raters.count++;\n\n          // create rating element\n          rater = $('<span class=\"star-rating-control\"/>');\n          input.before(rater);\n\n          // Mark element for initialization (once all stars are ready)\n          rater.addClass('rating-to-be-drawn');\n\n          // Accept readOnly setting from 'disabled' property\n          if (input.attr('disabled')) control.readOnly = true;\n\n          // Create 'cancel' button\n          rater.append(\n            control.cancel = $('<div class=\"rating-cancel\"><a title=\"' + control.cancel + '\">' + control.cancelValue + '</a></div>')\n            .mouseover(function() {\n              $(this).rating('drain');\n              $(this).addClass('star-rating-hover');\n              //$(this).rating('focus');\n            })\n            .mouseout(function() {\n              $(this).rating('draw');\n              $(this).removeClass('star-rating-hover');\n              //$(this).rating('blur');\n            })\n            .click(function() {\n              $(this).rating('select');\n            })\n            .data('rating', control)\n          );\n\n        }; // first element of group\n\n        // insert rating star\n        var star = $('<div class=\"star-rating rater-' + control.serial + '\"><a title=\"' + (this.title || this.value) + '\">' + this.value + '</a></div>');\n        rater.append(star);\n\n        // inherit attributes from input element\n        if (this.id) star.attr('id', this.id);\n        if (this.className) star.addClass(this.className);\n\n        // Half-stars?\n        if (control.half) control.split = 2;\n\n        // Prepare division control\n        if (typeof control.split == 'number' && control.split > 0) {\n          var stw = ($.fn.width ? star.width() : 0) || control.starWidth;\n          stw = 16; //width star\n          var spi = (control.count % control.split),\n            spw = Math.floor(stw / control.split);\n\n          star\n          // restrict star's width and hide overflow (already in CSS)\n            .width(spw)\n            // move the star left by using a negative margin\n            // this is work-around to IE's stupid box model (position:relative doesn't work)\n            .find('a').css({\n              'margin-left': '-' + (spi * spw) + 'px'\n            })\n        };\n\n        // readOnly?\n        if (control.readOnly) //{ //save a byte!\n        // Mark star as readOnly so user can customize display\n          star.addClass('star-rating-readonly');\n        //}  //save a byte!\n        else //{ //save a byte!\n        // Enable hover css effects\n          star.addClass('star-rating-live')\n          // Attach mouse events\n          .mouseover(function() {\n            $(this).rating('fill');\n            $(this).rating('focus');\n          })\n          .mouseout(function() {\n            $(this).rating('draw');\n            $(this).rating('blur');\n          })\n          .click(function() {\n            $(this).rating('select');\n          });\n        //}; //save a byte!\n\n        // set current selection\n        if (this.checked) control.current = star;\n\n        // hide input element\n        input.hide();\n\n        // backward compatibility, form element to plugin\n        input.change(function() {\n          $(this).rating('select');\n        });\n\n        // attach reference to star to input element and vice-versa\n        star.data('rating.input', input.data('rating.star', star));\n\n        // store control information in form (or body when form not available)\n        control.stars[control.stars.length] = star[0];\n        control.inputs[control.inputs.length] = input[0];\n        control.rater = raters[eid] = rater;\n        control.context = context;\n\n        input.data('rating', control);\n        rater.data('rating', control);\n        star.data('rating', control);\n        context.data('rating', raters);\n      }); // each element\n\n    // Initialize ratings (first draw)\n    $('.rating-to-be-drawn').rating('draw').removeClass('rating-to-be-drawn');\n\n    return this; // don't break the chain...\n  };\n\n  /*--------------------------------------------------------*/\n\n  /*\n    ### Core functionality and API ###\n  */\n  $.extend($.fn.rating, {\n    // Used to append a unique serial number to internal control ID\n    // each time the plugin is invoked so same name controls can co-exist\n    calls: 0,\n\n    focus: function() {\n      var control = this.data('rating');\n      if (!control) return this;\n      if (!control.focus) return this; // quick fail if not required\n      // find data for event\n      var input = $(this).data('rating.input') || $(this.tagName == 'INPUT' ? this : null);\n      // focus handler, as requested by focusdigital.co.uk\n      if (control.focus) control.focus.apply(input[0], [input.val(), $('a', input.data('rating.star'))[0]]);\n    }, // $.fn.rating.focus\n\n    blur: function() {\n      var control = this.data('rating');\n      if (!control) return this;\n      if (!control.blur) return this; // quick fail if not required\n      // find data for event\n      var input = $(this).data('rating.input') || $(this.tagName == 'INPUT' ? this : null);\n      // blur handler, as requested by focusdigital.co.uk\n      if (control.blur) control.blur.apply(input[0], [input.val(), $('a', input.data('rating.star'))[0]]);\n    }, // $.fn.rating.blur\n\n    fill: function() { // fill to the current mouse position.\n      var control = this.data('rating');\n      if (!control) return this;\n      // do not execute when control is in read-only mode\n      if (control.readOnly) return;\n      // Reset all stars and highlight them up to this element\n      this.rating('drain');\n      this.prevAll().andSelf().filter('.rater-' + control.serial).addClass('star-rating-hover');\n    }, // $.fn.rating.fill\n\n    drain: function() { // drain all the stars.\n      var control = this.data('rating');\n      if (!control) return this;\n      // do not execute when control is in read-only mode\n      if (control.readOnly) return;\n      // Reset all stars\n      control.rater.children().filter('.rater-' + control.serial).removeClass('star-rating-on').removeClass('star-rating-hover');\n    }, // $.fn.rating.drain\n\n    draw: function() { // set value and stars to reflect current selection\n      var control = this.data('rating');\n      if (!control) return this;\n      // Clear all stars\n      this.rating('drain');\n      // Set control value\n      if (control.current) {\n        control.current.data('rating.input').attr('checked', 'checked');\n        control.current.prevAll().andSelf().filter('.rater-' + control.serial).addClass('star-rating-on');\n      } else\n        $(control.inputs).removeAttr('checked');\n      // Show/hide 'cancel' button\n      control.cancel[control.readOnly || control.required ? 'hide' : 'show']();\n      // Add/remove read-only classes to remove hand pointer\n      this.siblings()[control.readOnly ? 'addClass' : 'removeClass']('star-rating-readonly');\n    }, // $.fn.rating.draw\n\n\n\n\n\n    select: function(value, wantCallBack) { // select a value\n\n      // ***** MODIFICATION *****\n      // Thanks to faivre.thomas - http://code.google.com/p/jquery-star-rating-plugin/issues/detail?id=27\n      //\n      // ***** LIST OF MODIFICATION *****\n      // ***** added Parameter wantCallBack : false if you don't want a callback. true or undefined if you want postback to be performed at the end of this method'\n      // ***** recursive calls to this method were like : ... .rating('select') it's now like .rating('select',undefined,wantCallBack); (parameters are set.)\n      // ***** line which is calling callback\n      // ***** /LIST OF MODIFICATION *****\n\n      var control = this.data('rating');\n      if (!control) return this;\n      // do not execute when control is in read-only mode\n      if (control.readOnly) return;\n      // clear selection\n      control.current = null;\n      // programmatically (based on user input)\n      if (typeof value != 'undefined') {\n        // select by index (0 based)\n        if (typeof value == 'number')\n          return $(control.stars[value]).rating('select', undefined, wantCallBack);\n        // select by literal value (must be passed as a string\n        if (typeof value == 'string')\n        //return\n          $.each(control.stars, function() {\n          if ($(this).data('rating.input').val() == value) $(this).rating('select', undefined, wantCallBack);\n        });\n      } else\n        control.current = this[0].tagName == 'INPUT' ?\n        this.data('rating.star') :\n        (this.is('.rater-' + control.serial) ? this : null);\n\n      // Update rating control state\n      this.data('rating', control);\n      // Update display\n      this.rating('draw');\n      // find data for event\n      var input = $(control.current ? control.current.data('rating.input') : null);\n      // click callback, as requested here: http://plugins.jquery.com/node/1655\n\n      // **** MODIFICATION *****\n      // Thanks to faivre.thomas - http://code.google.com/p/jquery-star-rating-plugin/issues/detail?id=27\n      //\n      //old line doing the callback :\n      //if(control.callback) control.callback.apply(input[0], [input.val(), $('a', control.current)[0]]);// callback event\n      //\n      //new line doing the callback (if i want :)\n      if ((wantCallBack || wantCallBack == undefined) && control.callback) control.callback.apply(input[0], [input.val(), $('a', control.current)[0]]); // callback event\n      //to ensure retro-compatibility, wantCallBack must be considered as true by default\n      // **** /MODIFICATION *****\n\n    }, // $.fn.rating.select\n\n\n\n\n\n    readOnly: function(toggle, disable) { // make the control read-only (still submits value)\n      var control = this.data('rating');\n      if (!control) return this;\n      // setread-only status\n      control.readOnly = toggle || toggle == undefined ? true : false;\n      // enable/disable control value submission\n      if (disable) $(control.inputs).attr(\"disabled\", \"disabled\");\n      else $(control.inputs).removeAttr(\"disabled\");\n      // Update rating control state\n      this.data('rating', control);\n      // Update display\n      this.rating('draw');\n    }, // $.fn.rating.readOnly\n\n    disable: function() { // make read-only and never submit value\n      this.rating('readOnly', true, true);\n    }, // $.fn.rating.disable\n\n    enable: function() { // make read/write and submit value\n        this.rating('readOnly', false, false);\n      } // $.fn.rating.select\n\n  });\n\n  /*--------------------------------------------------------*/\n\n  /*\n    ### Default Settings ###\n    eg.: You can override default control like this:\n    $.fn.rating.options.cancel = 'Clear';\n  */\n  $.fn.rating.options = { //$.extend($.fn.rating, { options: {\n    cancel: 'Cancel Rating', // advisory title for the 'cancel' link\n    cancelValue: '', // value to submit when user click the 'cancel' link\n    split: 0, // split the star into how many parts?\n\n    // Width of star image in case the plugin can't work it out. This can happen if\n    // the jQuery.dimensions plugin is not available OR the image is hidden at installation\n    starWidth: 16 //,\n\n    //NB.: These don't need to be pre-defined (can be undefined/null) so let's save some code!\n    //half:     false,         // just a shortcut to control.split = 2\n    //required: false,         // disables the 'cancel' button so user can only select one of the specified values\n    //readOnly: false,         // disable rating plugin interaction/ values cannot be changed\n    //focus:    function(){},  // executed when stars are focused\n    //blur:     function(){},  // executed when stars are focused\n    //callback: function(){},  // executed when a star is clicked\n  }; //} });\n\n  /*--------------------------------------------------------*/\n\n  /*\n    ### Default implementation ###\n    The plugin will attach itself to file inputs\n    with the class 'multi' when the page loads\n  */\n  $(function() {\n    $('input[type=radio].star').rating();\n  });\n\n\n\n  /*# AVOID COLLISIONS #*/\n})(jQuery);\n/*# AVOID COLLISIONS #*/\n"],"sourceRoot":"/source/"}